version: '3.2'
services:
    redis1:
        image: redis
        ports:
            - 4025:6379        
        command: [ "redis-server", "/redis_config/node1.conf" ]
        volumes:
          - E://2/spring-boot-redis-cluster-master//redis-conf:/redis_config
          
        networks:
            redis-networks:
                ipv4_address: 172.28.1.2    
#############################
    redis2:
        image: redis
        ports:
            - 4026:6380        
        command: [ "redis-server", "/redis_config/node2.conf" ]
        volumes:
          - E://2/spring-boot-redis-cluster-master//redis-conf:/redis_config          
        networks:
            redis-networks:
                ipv4_address: 172.28.1.3
#############################
    redis3:
        image: redis
        ports:
            - 4027:6381        
        command: [ "redis-server", "/redis_config/node3.conf" ]
        volumes:
          - E://2/spring-boot-redis-cluster-master//redis-conf:/redis_config
          
        networks:
            redis-networks:
                ipv4_address: 172.28.1.4
            #############################
    redis4:
        image: redis
        ports:
            - 4028:6382        
        command: [ "redis-server", "/redis_config/node4.conf" ]
        volumes:
          - E://2/spring-boot-redis-cluster-master//redis-conf:/redis_config
          
        networks:
            redis-networks:
                ipv4_address: 172.28.1.5
            #############################
    redis5:
        image: redis
        ports:
            - 4029:6383        
        command: [ "redis-server", "/redis_config/node5.conf" ]
        volumes:
          - E://2/spring-boot-redis-cluster-master//redis-conf:/redis_config
          
        networks:
            redis-networks:
                ipv4_address: 172.28.1.6
            #############################
    redis6:
        image: redis
        ports:
            - 4030:6384        
        command: [ "redis-server", "/redis_config/node6.conf" ]
        volumes:
          - E://2/spring-boot-redis-cluster-master//redis-conf:/redis_config
          
        networks:
            redis-networks:
                ipv4_address: 172.28.1.7
    java:
        build: ./
        expose:
            - 8080
        ports:
            - 8080:8080                         
        networks:
            redis-networks:
                ipv4_address: 172.28.1.9        
        depends_on:
            - db

        
    db:
        image: mysql:5.7
        #restart: no
        environment:
         MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
         MYSQL_USER: 'user'
      # You can use whatever password you like
         MYSQL_PASSWORD: 'password'
      # Password for root access
         MYSQL_ROOT_PASSWORD: '123456'
        ports:
      # <Port exposed> : < MySQL Port running inside container>
         - '3306:3306'
        expose:
      # Opens port 3306 on the container
         - '3306'
      # Where our data will be persisted
        volumes:
            - my-db:/var/lib/mysql     
        networks:
            redis-networks:
                ipv4_address: 172.28.1.8
    redis-cluster:
        image: redis:latest
        command: redis-cli -h 172.28.1.2 -p 6379 -c --cluster create 172.28.1.2:6379 172.28.1.3:6380 172.28.1.4:6381 172.28.1.5:6382 172.28.1.6:6383 172.28.1.7:6384  --cluster-replicas 1 --cluster-yes
        depends_on:
            - redis1
            - redis2
            - redis3
            - redis4
            - redis5
            - redis6
        #    - redis7
         #   - redis8
          #  - redis9
        networks:
            redis-networks:
            
    
networks:
  redis-networks:
    ipam:
        #driver: bridge
        config:
            - subnet: 172.28.0.0/16
volumes:
  my-db:
#redis-cli --cluster create 172.28.1.2:6379 172.28.1.3:6380 172.28.1.4:6381 172.28.1.5:6382 172.28.1.6:6383 172.28.1.7:6384 172.28.1.8:6385 172.28.1.9:6386 172.28.1.10:6387 --cluster-replicas 1